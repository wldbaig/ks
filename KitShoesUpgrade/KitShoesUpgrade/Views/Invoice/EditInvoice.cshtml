@model EditInvoiceViewModel
@{
    var baseUrl = System.Web.Configuration.WebConfigurationManager.AppSettings["BaseURL"];
    ViewBag.Title = "Edit Invoice";
    int? pair = 0;
    int? carton = 0;
    decimal? price = 0;
    var db = new KSEntities();
}
<link href="~/Content/css/devoops/tooltip.css" rel="stylesheet" />


@using (Html.BeginForm("EditInvoice", "Invoice", FormMethod.Post, new
{
    id = "uploadForm1",
    enctype = "multipart/form-data",
    onsubmit = "return confirm('Do you really want to submit the form?');"
}))
{
    <div class="row">
        <div id="breadcrumb" class="col-md-12">
            <ol class="breadcrumb">
                <li><a href="#">Invoice Management</a></li>
                <li><a href="~/Invoice">Invoices</a></li>
                <li><a href="#">Make Invoice</a></li>
            </ol>
        </div>
    </div>
    @Html.HiddenFor(m => m.InvoiceID)

    <div class="row">
        <div class="col-xs-12 col-sm-12">

            <div class="box">
                <div class="box-header">
                    <div class="box-name">
                        <i class="fa fa-search"></i>
                        <span>Invoice </span>
                    </div>
                    <div class="box-icons">
                        <a class="collapse-link">
                            @*<i class="fa fa-chevron-up"></i>*@
                        </a>
                    </div>
                    <div class="no-move"></div>
                </div>
                <div class="box-content">
                    <div class="row">
                        <p class="bg-danger">@Html.ValidationSummary(true)</p>
                        @if (TempData["ERROR"] != null)
                        {
                            <div class="alert alert-danger alert-dismissable">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                <span>@TempData["ERROR"] </span>
                            </div>
                        }
                        @if (TempData["SUCCESS"] != null)
                        {
                            <div class="alert alert-success alert-dismissable">
                                <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                                <span>@TempData["SUCCESS"] </span>
                            </div>
                        }

                        <div class="col-lg-6">

                            <fieldset>

                                @if (Model.Invoice.CustomerType == "CASH")
                                {
                                    <div class="form-group" id="CashCus">
                                        <div class="col-sm-4">
                                            Customer
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.TextBoxFor(model => model.Invoice.CustomerName, new { @placeholder = "Customer Name", @class = "form-control" })

                                        </div>
                                    </div>
                                }
                                else
                                {
                                    <div class="form-group" id="CredCus">
                                        <div class="col-sm-4">
                                            Customer
                                        </div>
                                        <div class="col-sm-4">
                                            @Html.DropDownListFor(model => model.Invoice.CustomerID, (SelectList)ViewBag.CustomerList, " Select Cutomer ", new { @class = "populate placeholder", id = "s2_with_tag" })

                                        </div>
                                    </div>
                                }
                                <div class="form-group">
                                    <div class="col-sm-4">
                                        @Html.Label("Articles", new { @class = "control-label" })

                                    </div>
                                    <div class="col-sm-4">
                                        @(Html.Kendo().MultiSelect().Name("b").Value(Model.ArtilceList).DataTextField("Name")
            .DataValueField("ID").DataSource(d => d.Read(r => r.Action("GetArticles", "Invoice")))
            .Events(e =>
                                    {
                                        e.Change("onChange").Select("onSelect").DataBound("onDataBound");
                                    }))

                                        @*@Html.ListBoxFor(model => model.Article, (SelectList)ViewBag.ArticleList, new { @class = "populate placeholder", id = "s3_with_tag" })*@
                                        @Html.ValidationMessageFor(model => model.Article)
                                    </div>
                                </div>

                                <div id="articleDetails" class="form-group">
                                    @foreach (var artDet in Model.Article)
                                    {
                                        <div class="custom" id=@artDet.ID>
                                            <div class="form-group">
                                                <div class="col-sm-6"> <b> @artDet.ArticleName  </b></div>
                                            </div>
                                            <div class="form-group">
                                                <input type="hidden" id="item-price-@artDet.ID" value=@artDet.Price />
                                            </div>
                                            <div class="form-group"> <div class="col-sm-3" style="width:33.33%">Color</div> <div class="col-sm-3" style="width:33.33%">Carton</div> <div class="col-sm-3" style="width:33.33%">Pair</div> </div>
                                            @foreach (var ii in artDet.ArticleDetails)
                                            {
                                                pair = db.InvoiceDetails.FirstOrDefault(c => c.ArticleDetailID == ii.ID && c.InvoiceID == Model.InvoiceID).ArticlePairs;
                                                carton = db.InvoiceDetails.FirstOrDefault(c => c.ArticleDetailID == ii.ID && c.InvoiceID == Model.InvoiceID).ArticleCartons;
                                                price = db.InvoiceDetails.FirstOrDefault(c => c.ArticleDetailID == ii.ID && c.InvoiceID == Model.InvoiceID).Price;
                                                <div class="form-group">
                                                    <div class="col-sm-2" style="width:33.33%"> @ii.Color.ColorName   </div>
                                                    <div class="col-sm-3" style="width:33.33%">
                                                        @ii.Carton
                                                        <input class="numberBox k-widget k-numerictextbox k-input" type="number" id="item-carton-@ii.ID" placeholder="Enter Cartons" name="item-carton-color-ID*@ii.ID" value=@carton min="0" onchange="calcuatePrice(@artDet.ID,@ii.ID,@ii.Article.PairInCarton)" />
                                                    </div>
                                                    <div class="col-sm-3" style="width:33.33%">
                                                        @ii.Pairs
                                                        <input class="numberBox k-widget k-numerictextbox k-input" type="number" id="item-pair-@ii.ID" placeholder="Enter Pairs" name="item-color-ID*@ii.ID" value=@pair min="0" onchange="calcuatePrice(@artDet.ID,@ii.ID,@ii.Article.PairInCarton )" />
                                                    </div>
                                                </div>
                                                <div class="itemPrices" id="artDet-@ii.ID" style="display:none">@price</div>
                                                <div class="itemPrices-@artDet.ID" id="artDetr-@ii.ID" style="display:none">@price</div>
                                            }
                                            <hr />
                                        </div>
                                    }
                                </div>
                            </fieldset>

                            <div class="clearfix"></div>
                            <div class="form-group">
                                <div class="col-sm-4">
                                    <button type="submit" class="btn btn-primary btn-label-left">
                                        Save
                                    </button>
                                    <a href="~/Invoice" class="btn btn-primary btn-label-left">
                                        Cancel
                                    </a>
                                </div>
                            </div>
                        </div>

                        <div class="col-lg-6">
                            <fieldset>

                                <div class="form-group" id="prev-bal" style="visibility: hidden">
                                    <div class="col-sm-4">
                                        Previous Balance
                                    </div>
                                    <div class="col-sm-4" id="Prev-Balance">
                                        0
                                    </div>
                                </div>

                                <div class="form-group" id="discount-paid">
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.Invoice.DiscountAmount,"Claim", new { @class = "control-label" })

                                    </div>
                                    <div class="col-sm-4">
                                        @(Html.Kendo().NumericTextBoxFor(m => m.Invoice.DiscountAmount)
                                        .Name("Discount")
                                            .Min(0)
                                            .Events(e => e
                                             .Change("changeDis")
                                             .Spin("spinDis"))

                                        )
                                    </div>
                                </div>

                                <div class="form-group" id="freight-paid">
                                    <div class="col-sm-4">
                                        @Html.LabelFor(model => model.Invoice.FreightAmount, new { @class = "control-label" })

                                    </div>
                                    <div class="col-sm-4">
                                        @(Html.Kendo().NumericTextBoxFor(model => model.Invoice.FreightAmount)
        .Name("Freight")
                                            .Min(0)
                                            .Events(e => e
                                             .Change("changeFrig")
                                             .Spin("spinFrig"))
                                        )
                                    </div>
                                </div>


                                <div class="form-group">
                                    <div class="col-sm-4">
                                        Total Amount
                                    </div>
                                    <div class="col-sm-4" id="total-Amount">
                                        @Model.Invoice.TotalPrice
                                    </div>
                                    <input type="hidden" value="@Model.Invoice.TotalPrice" name="am" id="am" />

                                </div>
                                @if (Model.Invoice.CustomerType == "CREDIT")
                                {
                                    <div class="form-group" id="amount-paid">
                                        <div class="col-sm-4">
                                            Amount

                                        </div>
                                        <div class="col-sm-4">
                                            @(Html.Kendo().NumericTextBoxFor<decimal>(m=>m.Invoice.AmountRecieved)
                                            .Name("AmountPaid")
                                            .Min(0) 
                                            )
                                        </div>
                                    </div>
                                }

                            </fieldset>
                        </div>

                    </div>

                </div>
            </div>
        </div>

    </div>

    <div class="ajax-loading" id="loading">
        <p></p>
    </div>

}
@section Styles
{
    <style scoped>
        .populate {
            width: 200px;
        }
    </style>
}


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");

    <script type="text/javascript">

        $(document).ready(function () {

            $('#s1_with_tag').select2({ placeholder: "Select Customer Type" });
            $('#s2_with_tag').select2({ placeholder: "Select Customer" });
            $('#s3_with_tag').select2({ placeholder: "Select Articles" });

            $('#s1_with_tag').on('change', function () {
                if (this.value == 'CASH') {
                    $("#CashCus").show();
                    $("#CredCus").hide();
                    $("#amount-paid").hide();
                }
                else {
                    $("#CredCus").show();
                    $("#CashCus").hide();
                    $("#amount-paid").show();
                }
            });

            $('#s2_with_tag').on('select2:select', function (e) {
                debugger;
                var arr = e.params.data.id;

                $.ajax({
                    type: "POST",
                    url: "@baseUrl/Invoice/GetCustomerRemainingBalance",
                    data: JSON.stringify({ CustomerID: arr }),
                    datatype: "json",
                    contentType: "application/json",
                    success: function (data) {
                        $('#Prev-Balance').html(data);

                        $('#prev-bal').css('visibility', 'visible');
                    },
                    error: function (error) {
                        $('#prev-bal').css('visibility', 'hidden');
                    }
                });

            });

            changeFrig();
            changeDis();

        });


        function changeFrig() {

            debugger;
            var totalAmount = $('#total-Amount');
            var am = parseFloat($('#am').val());

            var dis = parseFloat($('#Discount').val());

            var frig = parseFloat($('#Freight').val());

            var amount = am - dis + frig;

            $('#total-Amount').text(amount);

        }

        function spinFrig() {

            debugger;
            var totalAmount = $('#total-Amount');
            var am = parseFloat($('#am').val());

            var dis = parseFloat($('#Discount').val());

            var frig = parseFloat($('#Freight').val());

            var amount = am - dis + frig;

            $('#total-Amount').text(amount);

        }

        function changeDis() {

            debugger;
            var totalAmount = $('#total-Amount');
            var am = parseFloat($('#am').val());

            var dis = parseFloat($('#Discount').val());

            var freg = parseFloat($('#Freight').val());

            var amount = am - dis + freg;

            $('#total-Amount').text(amount);

        }

        function spinDis() {

            debugger;
            var totalAmount = $('#total-Amount');
            var am = parseFloat($('#am').val());

            var dis = parseFloat($('#Discount').val());

            var freg = parseFloat($('#Freight').val());

            var amount = am - dis + freg;

            $('#total-Amount').text(amount);

        }


        function calcuatePrice(artID, artDtlId, pairInCarton) {
            debugger;
            // var input = $(element).val();

            var carton = parseFloat($("#item-carton-" + artDtlId).val());
            var pair = parseFloat($("#item-pair-" + artDtlId).val());

            var input = (carton * pairInCarton) + pair;

            var artPrice = "#item-price-" + artID;

            var price = $(artPrice).val();

            var amontOfArticle = price * input;

            var artDtlPrice = "#artDet-" + artDtlId;

            var artDtlrPrice = "#artDetr-" + artDtlId;   // to remove price

            $(artDtlPrice).text(amontOfArticle);
            $(artDtlrPrice).text(amontOfArticle);

            var str = 0;
            $('.itemPrices').each(function () {
                str += parseFloat($(this).text());
            })
            $('#total-Amount').text(str);


            $('#am').val(str);

            changeFrig();
            changeDis();

            var numerictextboxval = $("#AmountPaid").data("kendoNumericTextBox");

            var max = numerictextboxval.max();

            numerictextboxval.max(str);
        }

    </script>

    <script>

        function onDataBound() {
            var current = this.value();
            this._savedOld = current.slice(0);
        }


        function onChange() {

            debugger;

            var previous = this._savedOld;
            var current = this.value();
            var diff = [];
            if (previous) {
                diff = $(previous).not(current).get();
            }
            this._savedOld = current.slice(0);
            if (diff.length > 0) {
                debugger;
                var item = "#" + diff;
                var artRempvPrice = ".itemPrices-" + diff; //e.params.data.id;
                var str = 0;
                $(artRempvPrice).each(function () {
                    str += parseFloat($(this).text());
                })
                var ttlAmount = parseFloat($('#total-Amount').text());
                ttlAmount = ttlAmount - str;
                $('#total-Amount').text(ttlAmount);

                $(item).remove();

                console.log('deleted')
            }

        }

        function onSelect(e) {
            debugger;
            var item = e.item;
            var text = item.text();

            $.ajax({
                type: "POST",
                url: "@baseUrl/Invoice/GetArticleDetailforInvoice",
                data: JSON.stringify({ ArticleID: text }),
                datatype: "json",
                contentType: "application/json",
                success: function (data) {
                    $('#articleDetails').prepend(data);
                    $('#articleDetails').show();
                },
                error: function (error) {
                    $('#articleDetails').hide();
                }
            });

        }

    </script>
}
