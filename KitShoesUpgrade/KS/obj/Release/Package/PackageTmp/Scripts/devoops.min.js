"use strict"; function LoadCalendarScript(e) { function t() { $.fn.fullCalendar ? e && "function" == typeof e && e() : $.getScript("/plugins/fullcalendar/fullcalendar.js", e) } $.fn.moment ? t() : $.getScript("/plugins/moment/moment.min.js", t) } function LoadOpenLayersScript(e) { $.fn.OpenLayers ? e && "function" == typeof e && e() : $.getScript("http://www.openlayers.org/api/OpenLayers.js", e) } function LoadTimePickerScript(e) { $.fn.timepicker ? e && "function" == typeof e && e() : $.getScript("/plugins/jquery-ui-timepicker-addon/jquery-ui-timepicker-addon.min.js", e) } function LoadBootstrapValidatorScript(e) { $.fn.bootstrapValidator ? e && "function" == typeof e && e() : $.getScript("/plugins/bootstrapvalidator/bootstrapValidator.min.js", e) } function LoadSelect2Script(e) { $.fn.select2 ? e && "function" == typeof e && e() : $.getScript("/plugins/select2/select2.min.js", e) } function LoadDataTablesScripts(e) { function t() { $.getScript("/plugins/datatables/jquery.dataTables.js", function () { $.getScript("/plugins/datatables/ZeroClipboard.js", function () { $.getScript("/plugins/datatables/TableTools.js", function () { $.getScript("/plugins/datatables/dataTables.bootstrap.js", e) }) }) }) } $.fn.dataTables ? e && "function" == typeof e && e() : t() } function LoadFineUploader(e) { $.fn.fineuploader ? e && "function" == typeof e && e() : $.getScript("/plugins/fineuploader/jquery.fineuploader-5.0.1.min.js", e) } function LoadXChartScript(e) { function t() { $.getScript("/plugins/xcharts/xcharts.min.js", e) } function a() { $.fn.d3 ? t() : $.getScript("/plugins/d3/d3.v3.min.js", t) } $.fn.xcharts ? e && "function" == typeof e && e() : a() } function LoadFlotScripts(e) { function t() { $.getScript("/plugins/flot/jquery.flot.js", a) } function a() { $.getScript("/plugins/flot/jquery.flot.resize.js", n) } function n() { $.getScript("/plugins/flot/jquery.flot.time.js", e) } $.fn.flot ? e && "function" == typeof e && e() : t() } function LoadMorrisScripts(e) { function t() { $.fn.Morris ? e && "function" == typeof e && e() : $.getScript("/plugins/morris/morris.min.js", e) } $.fn.raphael ? t() : $.getScript("/plugins/raphael/raphael-min.js", t) } function LoadFancyboxScript(e) { $.fn.fancybox ? e && "function" == typeof e && e() : $.getScript("/plugins/fancybox/jquery.fancybox.js", e) } function LoadKnobScripts(e) { $.fn.knob ? e && "function" == typeof e && e() : $.getScript("/plugins/jQuery-Knob/jquery.knob.js", e) } function LoadSparkLineScript(e) { $.fn.sparkline ? e && "function" == typeof e && e() : $.getScript("/plugins/sparkline/jquery.sparkline.min.js", e) } function LoadAjaxContent(e) { $(".preloader").show(), $.ajax({ mimeType: "text/html; charset=utf-8", url: e, type: "GET", success: function (e) { $("#ajax-content").html(e), $(".preloader").hide() }, error: function (e, t, a) { alert(a) }, dataType: "html", async: !1 }) } function WinMove() { $("div.box").not(".no-drop").draggable({ revert: !0, zIndex: 2e3, cursor: "crosshair", handle: ".box-name", opacity: .8 }).droppable({ tolerance: "pointer", drop: function (e, t) { { var a = t.draggable, n = $(this); a.position(), n.position() } a.swap(n), setTimeout(function () { var e = n.find("[id^=map-]"), t = a.find("[id^=map-]"); t.length > 0 || e.length > 0 ? (t.resize(), e.resize()) : (a.resize(), n.resize()) }, 50), setTimeout(function () { a.find("[id^=map-]").resize(), n.find("[id^=map-]").resize() }, 250) } }) } function ScreenSaver() { function e() { this.location = { x: Math.random() * i, y: Math.random() * o }, this.radius = 0, this.speed = 3, this.angle = 360 * Math.random(); var e = Math.round(255 * Math.random()), t = Math.round(255 * Math.random()), a = Math.round(255 * Math.random()), n = Math.random(); this.rgba = "rgba(" + e + ", " + t + ", " + a + ", " + n + ")" } function t() { n.globalCompositeOperation = "source-over", n.fillStyle = "rgba(0, 0, 0, 0.02)", n.fillRect(0, 0, i, o), n.globalCompositeOperation = "lighter"; for (var e = 0; e < r.length; e++) { var t = r[e]; n.fillStyle = "white", n.fillRect(t.location.x, t.location.y, t.radius, t.radius); for (var a = 0; a < r.length; a++) { var s = r[a], l = s.location.y - t.location.y, c = s.location.x - t.location.x, d = Math.sqrt(c * c + l * l); 200 > d && (n.beginPath(), n.lineWidth = 1, n.moveTo(t.location.x, t.location.y), n.lineTo(s.location.x, s.location.y), n.strokeStyle = t.rgba, n.stroke()) } t.location.x = t.location.x + t.speed * Math.cos(t.angle * Math.PI / 180), t.location.y = t.location.y + t.speed * Math.sin(t.angle * Math.PI / 180), t.location.x < 0 && (t.location.x = i), t.location.x > i && (t.location.x = 0), t.location.y < 0 && (t.location.y = o), t.location.y > o && (t.location.y = 0) } } var a = document.getElementById("canvas"), n = a.getContext("2d"), i = window.innerWidth, o = window.innerHeight; a.width = i, a.height = o; for (var r = [], s = 0; 25 > s; s++) r.push(new e); setInterval(t, 30) } function drawGoogleChart(e, t, a, n) { var i = google.visualization.arrayToDataTable(e), o = new n(document.getElementById(a)); o.draw(i, t) } function DrawKnob(e) { e.knob({ change: function () { }, release: function (e) { console.log("release : " + e) }, cancel: function () { console.log("cancel : ", this) }, draw: function () { if ("tron" == this.$.data("skin")) { var e, t = this.angle(this.cv), a = this.startAngle, n = this.startAngle, i = n + t, o = 1; return this.g.lineWidth = this.lineWidth, this.o.cursor && (n = i - .3) && (i += .3), this.o.displayPrevious && (e = this.startAngle + this.angle(this.v), this.o.cursor && (a = e - .3) && (e += .3), this.g.beginPath(), this.g.strokeStyle = this.pColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, a, e, !1), this.g.stroke()), this.g.beginPath(), this.g.strokeStyle = o ? this.o.fgColor : this.fgColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth, n, i, !1), this.g.stroke(), this.g.lineWidth = 2, this.g.beginPath(), this.g.strokeStyle = this.o.fgColor, this.g.arc(this.xy, this.xy, this.radius - this.lineWidth + 1 + 2 * this.lineWidth / 3, 0, 2 * Math.PI, !1), this.g.stroke(), !1 } } }); var t, a = 0, n = 0, i = 0, o = $("div.idir"), r = $("div.ival"), s = function () { i++, o.show().html("+").fadeOut(), r.html(i) }, l = function () { i--, o.show().html("-").fadeOut(), r.html(i) }; $("input.infinite").knob({ min: 0, max: 20, stopper: !1, change: function () { t > this.cv ? a ? (l(), a = 0) : (a = 1, n = 0) : t < this.cv && (n ? (s(), n = 0) : (n = 1, a = 0)), t = this.cv } }) } function drawMap(e, t, a, n) { var i = [], o = new OpenLayers.Map(a); o.addLayers(n); var r = new OpenLayers.Projection("EPSG:4326"), s = o.getProjectionObject(), l = 10; o.zoomToMaxExtent(); var c = new OpenLayers.LonLat(e, t); o.setCenter(c.transform(r, s), l); var d = new OpenLayers.Layer.Vector("You are here"), u = new OpenLayers.Feature.Vector(new OpenLayers.Geometry.Point(e, t).transform(r, s)); return d.addFeatures(u), i.push(d), o.addLayers(i), n.length > 1 && o.addControl(new OpenLayers.Control.LayerSwitcher({ ascending: !0 })), o.addControl(new OpenLayers.Control.Permalink), o.addControl(new OpenLayers.Control.MousePosition({ displayProjection: r })), o } function PrettyDates() { var e = new Date, t = e.getFullYear(), a = e.getMonth() + 1, n = 1; a > 3 && (n = a - 2), 9 >= n && (n = "0" + n), 9 >= a && (a = "0" + a); var i = e.getDate(); 9 >= i && (i = "0" + i); var o = t + "-" + n + "-01", r = t + "-" + a + "-" + i; return [o, r] } function SetMinBlockHeight(e) { e.css("min-height", window.innerHeight - 49) } function MessagesMenuWidth() { var e = window.innerWidth, t = $("#sidebar-left").outerWidth(), a = 16.666666666666664 * (e - t) / 100; $("#messages-menu").width(a) } function DashboardTabChecker() { $("#content").on("click", "a.tab-link", function (e) { e.preventDefault(), $("div#dashboard_tabs").find("div[id^=dashboard]").each(function () { $(this).css("visibility", "hidden").css("position", "absolute") }); var t = $(this).attr("id"); $("#dashboard-" + t).css("visibility", "visible").css("position", "relative"), $(this).closest(".nav").find("li").removeClass("active"), $(this).closest("li").addClass("active") }) } function TinyMCEStart(e, t) { var a = []; "extreme" == t && (a = ["advlist anchor autolink autoresize autosave bbcode charmap code contextmenu directionality ", "emoticons fullpage fullscreen hr image insertdatetime layer legacyoutput", "link lists media nonbreaking noneditable pagebreak paste preview print save searchreplace", "tabfocus table template textcolor visualblocks visualchars wordcount"]), tinymce.init({ selector: e, theme: "modern", plugins: a, toolbar: "insertfile undo redo | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image | print preview media fullpage | forecolor backcolor emoticons", style_formats: [{ title: "Header 2", block: "h2", classes: "page-header" }, { title: "Header 3", block: "h3", classes: "page-header" }, { title: "Header 4", block: "h4", classes: "page-header" }, { title: "Header 5", block: "h5", classes: "page-header" }, { title: "Header 6", block: "h6", classes: "page-header" }, { title: "Bold text", inline: "b" }, { title: "Red text", inline: "span", styles: { color: "#ff0000" } }, { title: "Red header", block: "h1", styles: { color: "#ff0000" } }, { title: "Example 1", inline: "span", classes: "example1" }, { title: "Example 2", inline: "span", classes: "example2" }, { title: "Table styles" }, { title: "Table row 1", selector: "tr", classes: "tablerow1" }] }) } function SparkLineDrawBarGraph(e, t, a) { if (a) var n = a; else n = "#6AA6D6"; e.sparkline(t, { type: "bar", barWidth: 7, highlightColor: "#000", barSpacing: 2, height: 40, stackedBarColor: n }) } function OpenModalBox(e, t, a) { var n = $("#modalbox"); n.find(".modal-header-name span").html(e), n.find(".devoops-modal-inner").html(t), n.find(".devoops-modal-bottom").html(a), n.fadeIn("fast"), $("body").addClass("body-expanded") } function CloseModalBox() { var e = $("#modalbox"); e.fadeOut("fast", function () { e.find(".modal-header-name span").children().remove(), e.find(".devoops-modal-inner").children().remove(), e.find(".devoops-modal-bottom").children().remove(), $("body").removeClass("body-expanded") }) } function Table2Json(e) { var t = {}; e.find("tr").each(function () { var e = [], a = $(this).index(); $("td", this).each(function (t) { 0 != t && e.push($("input", this).val()) }), t[a] = e }); var a = JSON.stringify(t); OpenModalBox("Table to JSON values", a) } function FlotGraph1() { function e() { for (a.length > 0 && (a = a.slice(1)) ; a.length < n;) { var e = a.length > 0 ? a[a.length - 1] : 50, t = e + 10 * Math.random() - 5; 0 > t ? t = 0 : t > 100 && (t = 100), a.push(t) } for (var i = [], o = 0; o < a.length; ++o) i.push([o, a[o]]); return i } function t() { o.setData([e()]), o.draw(), setTimeout(t, i) } var a = [], n = 300, i = 30, o = $.plot("#box-one-content", [e()], { series: { shadowSize: 0 }, yaxis: { min: 0, max: 100 }, xaxis: { show: !1 } }); t() } function FlotGraph2() { function e() { s = null; var e = l, t = o.getAxes(); if (!(e.x < t.xaxis.min || e.x > t.xaxis.max || e.y < t.yaxis.min || e.y > t.yaxis.max)) { var a, n, i = o.getData(); for (a = 0; a < i.length; ++a) { var c = i[a]; for (n = 0; n < c.data.length && !(c.data[n][0] > e.x) ; ++n); var d, u = c.data[n - 1], p = c.data[n]; d = null == u ? p[1] : null == p ? u[1] : u[1] + (p[1] - u[1]) * (e.x - u[0]) / (p[0] - u[0]), r.eq(a).text(c.label.replace(/=.*/, "= " + d.toFixed(2))) } } } for (var t = [], a = [], n = [], i = 0; 14 > i; i += .1) t.push([i, Math.sin(i)]), a.push([i, Math.cos(i)]), n.push([i, Math.tan(i) / 4]); var o = $.plot("#box-two-content", [{ data: t, label: "sin(x) = -0.00" }, { data: a, label: "cos(x) = -0.00" }, { data: n, label: "tan(x)/4 = -0.00" }], { series: { lines: { show: !0 } }, crosshair: { mode: "x" }, grid: { hoverable: !0, autoHighlight: !1 }, yaxis: { min: -5.2, max: 5.2 } }), r = $("#box-two-content .legendLabel"); r.each(function () { $(this).css("width", $(this).width()) }); var s = null, l = null; $("#box-two-content").bind("plothover", function (t, a) { l = a, s || (s = setTimeout(e, 50)) }) } function FlotGraph3() { function e(e) { $.plot("#box-three-content", [{ data: t, color: "rgb(30, 180, 20)", threshold: { below: e, color: "rgb(200, 20, 30)" }, lines: { steps: !0 } }]) } for (var t = [], a = 0; 60 >= a; a += 1) t.push([a, parseInt(30 * Math.random() - 10)]); e(0) } function FlotGraph4() { for (var e = [], t = 0; 14 > t; t += .5) e.push([t, Math.sin(t)]); for (var a = [[0, 3], [4, 8], [8, 5], [9, 13]], n = [], t = 0; 14 > t; t += .5) n.push([t, Math.cos(t)]); for (var i = [], t = 0; 14 > t; t += .1) i.push([t, Math.sqrt(10 * t)]); for (var o = [], t = 0; 14 > t; t += .5) o.push([t, Math.sqrt(t)]); for (var r = [], t = 0; 14 > t; t += .5 + Math.random()) r.push([t, Math.sqrt(2 * t + Math.sin(t) + 5)]); $.plot("#box-four-content", [{ data: e, lines: { show: !0, fill: !0 } }, { data: a, bars: { show: !0 } }, { data: n, points: { show: !0 } }, { data: i, lines: { show: !0 } }, { data: o, lines: { show: !0 }, points: { show: !0 } }, { data: r, lines: { show: !0, steps: !0 } }]) } function MorrisChart1() { var e = [{ period: "2013-10-01", licensed: 3407, sorned: 660 }, { period: "2013-09-30", licensed: 3351, sorned: 629 }, { period: "2013-09-29", licensed: 3269, sorned: 618 }, { period: "2013-09-20", licensed: 3246, sorned: 661 }, { period: "2013-09-19", licensed: 3257, sorned: 667 }, { period: "2013-09-18", licensed: 3248, sorned: 627 }, { period: "2013-09-17", licensed: 3171, sorned: 660 }, { period: "2013-09-16", licensed: 3171, sorned: 676 }, { period: "2013-09-15", licensed: 3201, sorned: 656 }, { period: "2013-09-10", licensed: 3215, sorned: 622 }]; Morris.Bar({ element: "morris-chart-1", data: e, xkey: "period", ykeys: ["licensed", "sorned"], labels: ["Licensed", "SORN"], xLabelAngle: 60 }) } function MorrisChart2() { Morris.Area({ element: "morris-chart-2", data: [{ x: "2011 Q1", y: 3, z: 3, m: 1 }, { x: "2011 Q2", y: 2, z: 0, m: 7 }, { x: "2011 Q3", y: 2, z: 5, m: 2 }, { x: "2011 Q4", y: 4, z: 4, m: 5 }, { x: "2012 Q1", y: 6, z: 1, m: 11 }, { x: "2012 Q2", y: 4, z: 4, m: 3 }, { x: "2012 Q3", y: 4, z: 4, m: 7 }, { x: "2012 Q4", y: 4, z: 4, m: 9 }], xkey: "x", ykeys: ["y", "z", "m"], labels: ["Y", "Z", "M"] }).on("click", function (e, t) { console.log(e, t) }) } function MorrisChart3() { for (var e = [], t = 0; 360 >= t; t += 10) e.push({ x: t, y: Math.sin(Math.PI * t / 180).toFixed(4), z: Math.cos(Math.PI * t / 180).toFixed(4) }); Morris.Line({ element: "morris-chart-3", data: e, xkey: "x", ykeys: ["y", "z"], labels: ["sin(x)", "cos(x)"], parseTime: !1, goals: [-1, 0, 1] }) } function MorrisChart4() { Morris.Bar({ element: "morris-chart-4", data: [{ x: "2011 Q1", y: 0 }, { x: "2011 Q2", y: 1 }, { x: "2011 Q3", y: 2 }, { x: "2011 Q4", y: 3 }, { x: "2012 Q1", y: 4 }, { x: "2012 Q2", y: 5 }, { x: "2012 Q3", y: 6 }, { x: "2012 Q4", y: 7 }, { x: "2013 Q1", y: 8 }, { x: "2013 Q2", y: 7 }, { x: "2013 Q3", y: 6 }, { x: "2013 Q4", y: 5 }, { x: "2014 Q1", y: 9 }], xkey: "x", ykeys: ["y"], labels: ["Y"], barColors: function (e, t, a) { if ("bar" === a) { var n = Math.ceil(255 * e.y / this.ymax); return "rgb(" + n + ",0,0)" } return "#000" } }) } function MorrisChart5() { Morris.Area({ element: "morris-chart-5", data: [{ period: "2010 Q1", iphone: 2666, ipad: null, itouch: 2647 }, { period: "2010 Q2", iphone: 2778, ipad: 2294, itouch: 2441 }, { period: "2010 Q3", iphone: 4912, ipad: 1969, itouch: 2501 }, { period: "2010 Q4", iphone: 3767, ipad: 3597, itouch: 5689 }, { period: "2011 Q1", iphone: 6810, ipad: 1914, itouch: 2293 }, { period: "2011 Q2", iphone: 5670, ipad: 4293, itouch: 1881 }, { period: "2011 Q3", iphone: 4820, ipad: 3795, itouch: 1588 }, { period: "2011 Q4", iphone: 15073, ipad: 5967, itouch: 5175 }, { period: "2012 Q1", iphone: 10687, ipad: 4460, itouch: 2028 }, { period: "2012 Q2", iphone: 8432, ipad: 5713, itouch: 1791 }], xkey: "period", ykeys: ["iphone", "ipad", "itouch"], labels: ["iPhone", "iPad", "iPod Touch"], pointSize: 2, hideHover: "auto" }) } function DrawAllCharts() { var e = [["Smartphones", "PC", "Notebooks", "Monitors", "Routers", "Switches"], ["01.01.2014", 1234, 2342, 344, 232, 131], ["02.01.2014", 1254, 232, 314, 232, 331], ["03.01.2014", 2234, 342, 298, 232, 665], ["04.01.2014", 2234, 42, 559, 232, 321], ["05.01.2014", 1999, 82, 116, 232, 334], ["06.01.2014", 1634, 834, 884, 232, 191], ["07.01.2014", 321, 342, 383, 232, 556], ["08.01.2014", 845, 112, 499, 232, 731]], t = { title: "Sales of company", hAxis: { title: "Date", titleTextStyle: { color: "red" } }, backgroundColor: "#fcfcfc", vAxis: { title: "Quantity", titleTextStyle: { color: "blue" } } }, a = "google-chart-1", n = google.visualization.ColumnChart; drawGoogleChart(e, t, a, n); var i = [["Height", "Width"], ["Samsung", 74.5], ["Apple", 31.24], ["LG", 12.1], ["Huawei", 11.14], ["Sony", 8.3], ["Nokia", 7.4], ["Blackberry", 6.8], ["HTC", 6.63], ["Motorola", 3.5], ["Other", 43.15]], o = { title: "Smartphone marketshare 2Q 2013", backgroundColor: "#fcfcfc" }, r = "google-chart-2", s = google.visualization.PieChart; drawGoogleChart(i, o, r, s); var l = [["Age", "Weight"], [8, 12], [4, 5.5], [11, 14], [4, 5], [3, 3.5], [6.5, 7]], c = { title: "Age vs. Weight comparison", hAxis: { title: "Age", minValue: 0, maxValue: 15 }, vAxis: { title: "Weight", minValue: 0, maxValue: 15 }, legend: "none", backgroundColor: "#fcfcfc" }, d = "google-chart-3", u = google.visualization.ScatterChart; drawGoogleChart(l, c, d, u); var p = [["ID", "Life Expectancy", "Fertility Rate", "Region", "Population"], ["CAN", 80.66, 1.67, "North America", 33739900], ["DEU", 79.84, 1.36, "Europe", 81902307], ["DNK", 78.6, 1.84, "Europe", 5523095], ["EGY", 72.73, 2.78, "Middle East", 79716203], ["GBR", 80.05, 2, "Europe", 61801570], ["IRN", 72.49, 1.7, "Middle East", 73137148], ["IRQ", 68.09, 4.77, "Middle East", 31090763], ["ISR", 81.55, 2.96, "Middle East", 7485600], ["RUS", 68.6, 1.54, "Europe", 14185e4], ["USA", 78.09, 2.05, "North America", 307007e3]], h = { title: "Correlation between life expectancy, fertility rate and population of some world countries (2010)", hAxis: { title: "Life Expectancy" }, vAxis: { title: "Fertility Rate" }, backgroundColor: "#fcfcfc", bubble: { textStyle: { fontSize: 11 } } }, f = "google-chart-4", m = google.visualization.BubbleChart; drawGoogleChart(p, h, f, m); var g = [["Country", "Popularity"], ["Germany", 200], ["United States", 300], ["Brazil", 400], ["Canada", 500], ["France", 600], ["RU", 700]], v = { backgroundColor: "#fcfcfc", enableRegionInteractivity: !0 }, x = "google-chart-5", b = google.visualization.GeoChart; drawGoogleChart(g, v, x, b); var y = [["Year", "Sales", "Expenses"], ["2004", 1e3, 400], ["2005", 1170, 460], ["2006", 660, 1120], ["2007", 1030, 540], ["2008", 2080, 740], ["2009", 1949, 690], ["2010", 2334, 820]], $ = { backgroundColor: "#fcfcfc", title: "Company Performance" }, k = "google-chart-6", w = google.visualization.LineChart; drawGoogleChart(y, $, k, w); var C = [["Task", "Hours per Day"], ["Work", 11], ["Eat", 2], ["Commute", 2], ["Watch TV", 2], ["Sleep", 7]], M = { backgroundColor: "#fcfcfc", title: "My Daily Activities", pieHole: .4 }, S = "google-chart-7", T = google.visualization.PieChart; drawGoogleChart(C, M, S, T); var L = [["Generation", "Descendants"], [0, 1], [1, 33], [2, 269], [3, 2013]], D = { backgroundColor: "#fcfcfc", title: "Descendants by Generation", hAxis: { title: "Generation", minValue: 0, maxValue: 3 }, vAxis: { title: "Descendants", minValue: 0, maxValue: 2100 }, trendlines: { 0: { type: "exponential", visibleInLegend: !0 } } }, _ = "google-chart-8", P = google.visualization.ScatterChart; drawGoogleChart(L, D, _, P) } function xGraph1() { var e = document.createElement("div"), t = -(~~$("html").css("padding-left").replace("px", "") + ~~$("body").css("margin-left").replace("px", "")), a = -32; e.className = "ex-tooltip", document.body.appendChild(e); { var n = { xScale: "time", yScale: "linear", main: [{ className: ".xchart-class-1", data: [{ x: "2012-11-05", y: 6 }, { x: "2012-11-06", y: 6 }, { x: "2012-11-07", y: 8 }, { x: "2012-11-08", y: 3 }, { x: "2012-11-09", y: 4 }, { x: "2012-11-10", y: 9 }, { x: "2012-11-11", y: 6 }, { x: "2012-11-12", y: 16 }, { x: "2012-11-13", y: 4 }, { x: "2012-11-14", y: 9 }, { x: "2012-11-15", y: 2 }] }] }, i = { dataFormatX: function (e) { return d3.time.format("%Y-%m-%d").parse(e) }, tickFormatX: function (e) { return d3.time.format("%A")(e) }, mouseover: function (n) { var i = $(this).offset(); $(e).text(d3.time.format("%A")(n.x) + ": " + n.y).css({ top: a + i.top, left: i.left + t }).show() }, mouseout: function () { $(e).hide() } }; new xChart("line-dotted", n, "#xchart-1", i) } } function xGraph2() { { var e = { xScale: "ordinal", yScale: "linear", main: [{ className: ".xchart-class-2", data: [{ x: "Apple", y: 575 }, { x: "Facebook", y: 163 }, { x: "Microsoft", y: 303 }, { x: "Cisco", y: 121 }, { x: "Google", y: 393 }] }] }; new xChart("bar", e, "#xchart-2") } } function xGraph3() { { var e = { xScale: "time", yScale: "linear", type: "line", main: [{ className: ".xchart-class-3", data: [{ x: "2012-11-05", y: 1 }, { x: "2012-11-06", y: 6 }, { x: "2012-11-07", y: 13 }, { x: "2012-11-08", y: -3 }, { x: "2012-11-09", y: -4 }, { x: "2012-11-10", y: 9 }, { x: "2012-11-11", y: 6 }, { x: "2012-11-12", y: 7 }, { x: "2012-11-13", y: -2 }, { x: "2012-11-14", y: -7 }] }] }, t = { dataFormatX: function (e) { return d3.time.format("%Y-%m-%d").parse(e) }, tickFormatX: function (e) { return d3.time.format("%A")(e) } }; new xChart("line", e, "#xchart-3", t) } } function CoinDeskGraph() { var e = PrettyDates(), t = e[0], a = e[1], n = "http://api.coindesk.com/v1/bpi/historical/close.json?start=" + t + "&end=" + a; $.getJSON(n, function (e) { $.each(e.bpi, function (e, t) { xchart_data.push({ x: e, y: t }) }); var t; $("#coindesk-xchart").resize(function () { clearTimeout(t), t = setTimeout(DrawCoinDeskXCharts, 500) }), DrawCoinDeskXCharts(), $.each(e.bpi, function (e, t) { google_data.push([e, t]) }); var a; $("#coindesk-google-chart").resize(function () { clearTimeout(a), a = setTimeout(DrawCoinDeskGoogleCharts, 500) }), DrawCoinDeskGoogleCharts(), $.each(e.bpi, function (e, t) { var a = e; a = a.split("-"); var n = a[1] + "/" + a[2] + "/" + a[0], i = new Date(n).getTime(); exchange_rate.push([i, t]) }), DrawCoinDeskFlot(); var n; $("#coindesk-sparklines").resize(function () { clearTimeout(n), n = setTimeout(DrawCoinDeskSparkLine, 500) }), DrawCoinDeskSparkLine() }) } function DrawCoinDeskSparkLine() { $("#coindesk-sparklines").sparkline(exchange_rate, { height: "100%", width: "100%" }) } function DrawCoinDeskXCharts() { { var e = { xScale: "ordinal", yScale: "linear", main: [{ className: ".pizza", data: xchart_data }] }; new xChart("line-dotted", e, "#coindesk-xchart") } } function DrawCoinDeskFlot() { var e = [{ data: exchange_rate, label: "Bitcoin exchange rate ($)" }], t = { canvas: !0, xaxes: [{ mode: "time" }], yaxes: [{ min: 0 }, { position: "right", alignTicksWithAxis: 1, tickFormatter: function (e, t) { return e.toFixed(t.tickDecimals) + "€" } }], legend: { position: "sw" } }; $.plot("#coindesk-flot", e, t) } function DrawCoinDeskGoogleCharts() { var e = { backgroundColor: "#fcfcfc", title: "Coindesk Exchange Rate" }, t = "coindesk-google-chart", a = google.visualization.LineChart; drawGoogleChart(google_data, e, t, a) } function TestTable1() { $("#datatable-1").dataTable({ aaSorting: [[0, "asc"]], sDom: "<'box-content'<'col-sm-6'f><'col-sm-6 text-right'l><'clearfix'>>rt<'box-content'<'col-sm-6'i><'col-sm-6 text-right'p><'clearfix'>>", sPaginationType: "bootstrap", oLanguage: { sSearch: "", sLengthMenu: "_MENU_" } }) } function TestTable2() { var e = [], t = $("#datatable-2").dataTable({ aaSorting: [[0, "asc"]], sDom: "<'box-content'<'col-sm-6'f><'col-sm-6 text-right'l><'clearfix'>>rt<'box-content'<'col-sm-6'i><'col-sm-6 text-right'p><'clearfix'>>", sPaginationType: "bootstrap", oLanguage: { sSearch: "", sLengthMenu: "_MENU_" }, bAutoWidth: !1 }), a = $("#datatable-2 thead input"); a.on("keyup", function () { t.fnFilter(this.value, a.index(this)) }).on("focus", function () { "search_init" == this.className && (this.className = "", this.value = "") }).on("blur", function () { "" == this.value && (this.className = "search_init", this.value = e[a.index(this)]) }), a.each(function (t) { e[t] = this.value }) } function TestTable3() { $("#datatable-3").dataTable({ aaSorting: [[0, "asc"]], sDom: "T<'box-content'<'col-sm-6'f><'col-sm-6 text-right'l><'clearfix'>>rt<'box-content'<'col-sm-6'i><'col-sm-6 text-right'p><'clearfix'>>", sPaginationType: "bootstrap", oLanguage: { sSearch: "", sLengthMenu: "_MENU_" }, oTableTools: { sSwfPath: "/plugins/datatables/copy_csv_xls_pdf.swf", aButtons: ["copy", "print", { sExtends: "collection", sButtonText: 'Save <span class="caret" />', aButtons: ["csv", "xls", "pdf"] }] } }) } function SmallChangeVal(e) { var t = Math.floor(100 * Math.random()), a = Math.random() < .5 ? -1 : 1, n = e[0] + t * a; return parseInt(n) > 1e3 ? [e[0] - t] : parseInt(n) < 0 ? [e[0] + t] : [n] } function SparklineTestData() { for (var e = [], t = 1; 9 > t; t++) e.push([Math.floor(1e3 * Math.random())]); return e } function RedrawKnob(e) { e.animate({ value: Math.floor(100 * Math.random()) }, { duration: 3e3, easing: "swing", progress: function () { $(this).val(parseInt(Math.ceil(e.val()))).trigger("change") } }) } function SparklineLoop() { SparkLineDrawBarGraph($("#sparkline-1"), sparkline_arr_1.map(SmallChangeVal)), SparkLineDrawBarGraph($("#sparkline-2"), sparkline_arr_2.map(SmallChangeVal), "#7BC5D3"), SparkLineDrawBarGraph($("#sparkline-3"), sparkline_arr_3.map(SmallChangeVal), "#B25050") } function MorrisDashboard() { Morris.Line({ element: "stat-graph", data: [{ period: "2014-01", Win8: 13.4, Win7: 55.3, Vista: 1.5, NT: .3, XP: 11, Linux: 4.9, Mac: 9.6, Mobile: 4 }, { period: "2013-12", Win8: 10, Win7: 55.9, Vista: 1.5, NT: 3.1, XP: 11.6, Linux: 4.8, Mac: 9.2, Mobile: 3.8 }, { period: "2013-11", Win8: 8.6, Win7: 56.4, Vista: 1.6, NT: 3.7, XP: 11.7, Linux: 4.8, Mac: 9.6, Mobile: 3.7 }, { period: "2013-10", Win8: 9.9, Win7: 56.7, Vista: 1.6, NT: 1.4, XP: 12.4, Linux: 4.9, Mac: 9.6, Mobile: 3.3 }, { period: "2013-09", Win8: 10.2, Win7: 56.8, Vista: 1.6, NT: .4, XP: 13.5, Linux: 4.8, Mac: 9.3, Mobile: 3.3 }, { period: "2013-08", Win8: 9.6, Win7: 55.9, Vista: 1.7, NT: .4, XP: 14.7, Linux: 5, Mac: 9.2, Mobile: 3.4 }, { period: "2013-07", Win8: 9, Win7: 56.2, Vista: 1.8, NT: .4, XP: 15.8, Linux: 4.9, Mac: 8.7, Mobile: 3.2 }, { period: "2013-06", Win8: 8.6, Win7: 56.3, Vista: 2, NT: .4, XP: 15.4, Linux: 4.9, Mac: 9.1, Mobile: 3.2 }, { period: "2013-05", Win8: 7.9, Win7: 56.4, Vista: 2.1, NT: .4, XP: 15.7, Linux: 4.9, Mac: 9.7, Mobile: 2.6 }, { period: "2013-04", Win8: 7.3, Win7: 56.4, Vista: 2.2, NT: .4, XP: 16.4, Linux: 4.8, Mac: 9.7, Mobile: 2.2 }, { period: "2013-03", Win8: 6.7, Win7: 55.9, Vista: 2.4, NT: .4, XP: 17.6, Linux: 4.7, Mac: 9.5, Mobile: 2.3 }, { period: "2013-02", Win8: 5.7, Win7: 55.3, Vista: 2.4, NT: .4, XP: 19.1, Linux: 4.8, Mac: 9.6, Mobile: 2.2 }, { period: "2013-01", Win8: 4.8, Win7: 55.3, Vista: 2.6, NT: .5, XP: 19.9, Linux: 4.8, Mac: 9.3, Mobile: 2.2 }], xkey: "period", ykeys: ["Win8", "Win7", "Vista", "NT", "XP", "Linux", "Mac", "Mobile"], labels: ["Win8", "Win7", "Vista", "NT", "XP", "Linux", "Mac", "Mobile"] }), Morris.Donut({ element: "morris_donut_1", data: [{ value: 70, label: "pay", formatted: "at least 70%" }, { value: 15, label: "client", formatted: "approx. 15%" }, { value: 10, label: "buy", formatted: "approx. 10%" }, { value: 5, label: "hosted", formatted: "at most 5%" }], formatter: function (e, t) { return t.formatted } }), Morris.Donut({ element: "morris_donut_2", data: [{ value: 20, label: "office", formatted: "current" }, { value: 35, label: "store", formatted: "approx. 35%" }, { value: 20, label: "shop", formatted: "approx. 20%" }, { value: 25, label: "cars", formatted: "at most 25%" }], formatter: function (e, t) { return t.formatted } }), Morris.Donut({ element: "morris_donut_3", data: [{ value: 17, label: "current", formatted: "current" }, { value: 22, label: "week", formatted: "last week" }, { value: 10, label: "month", formatted: "last month" }, { value: 25, label: "period", formatted: "period" }, { value: 25, label: "year", formatted: "this year" }], formatter: function (e, t) { return t.formatted } }) } function DrawSparklineDashboard() { SparklineLoop(), setInterval(SparklineLoop, 1e3); var e = [[309], [223], [343], [652], [455], [18], [912], [15]]; $(".bar").each(function () { $(this).sparkline(e.map(SmallChangeVal), { type: "bar", barWidth: 5, highlightColor: "#000", barSpacing: 2, height: 30, stackedBarColor: "#6AA6D6" }) }); var t = [[1, 341], [2, 464], [4, 564], [5, 235], [6, 335], [7, 535], [8, 642], [9, 342], [10, 765]]; $(".td-graph").each(function () { var e = $.map(t, function (e) { return [[e[0], SmallChangeVal([e[1]])]] }); $(this).sparkline(e, { defaultPixelsPerValue: 10, minSpotColor: null, maxSpotColor: null, spotColor: null, fillColor: !1, lineWidth: 2, lineColor: "#5A8DB6" }) }) } function DrawKnobDashboard() { var e = [$("#knob-srv-1"), $("#knob-srv-2"), $("#knob-srv-3"), $("#knob-srv-4"), $("#knob-srv-5"), $("#knob-srv-6")]; e.forEach(DrawKnob), setInterval(function () { e.forEach(RedrawKnob) }, 3e3) } function FileUpload() { $("#bootstrapped-fine-uploader").fineUploader({ template: "qq-template-bootstrap", classes: { success: "alert alert-success", fail: "alert alert-error" }, thumbnails: { placeholders: { waitingPath: "assets/waiting-generic.png", notAvailablePath: "assets/not_available-generic.png" } }, request: { endpoint: "server/handleUploads" }, validation: { allowedExtensions: ["jpeg", "jpg", "gif", "png"] } }) } function LoadTestMap() { $.getJSON("http://www.telize.com/geoip?callback=?", function (e) { var t = new OpenLayers.Layer.OSM("OpenStreetMap"), a = new OpenLayers.Layer.Google("Google Streets", { numZoomLevels: 22, visibility: !1 }), n = new OpenLayers.Layer.Google("Google Sattelite", { type: google.maps.MapTypeId.SATELLITE, numZoomLevels: 22 }), i = [a, t, n], o = drawMap(e.longitude, e.latitude, "map-1", i); $("#map-1").resize(function () { setTimeout(o.updateSize(), 500) }); var r = new OpenLayers.Layer.OSM("OpenStreetMap"), s = [r], l = drawMap(e.longitude, e.latitude, "map-2", s); $("#map-2").resize(function () { setTimeout(l.updateSize(), 500) }); var c = new OpenLayers.Layer.Google("Google Sattelite", { type: google.maps.MapTypeId.SATELLITE, numZoomLevels: 22 }), d = [c], u = drawMap(e.longitude, e.latitude, "map-3", d); $("#map-3").resize(function () { setTimeout(u.updateSize(), 500) }) }) } function FullScreenMap() { $.getJSON("http://www.telize.com/geoip?callback=?", function (e) { { var t = new OpenLayers.Layer.OSM("OpenStreetMap"), a = new OpenLayers.Layer.Google("Google Streets", { numZoomLevels: 22, visibility: !1 }), n = new OpenLayers.Layer.Google("Google Sattelite", { type: google.maps.MapTypeId.SATELLITE, numZoomLevels: 22 }), i = [a, t, n]; drawMap(e.longitude, e.latitude, "full-map", i) } }) } function displayFlickrImages(e) { var t; $.each(e.items, function (e, a) { return e > 11 ? !1 : (t = "<a href=" + a.link + " title=" + a.title + ' target="_blank"><img alt=' + a.title + " src=" + a.media.m + " /></a>", void $("#box-one-content").append(t)) }), setTimeout(function () { $("#box-one-content").justifiedGallery({ usedSuffix: "lt240", justifyLastRow: !0, rowHeight: 150, fixedHeight: !1, captions: !0, margins: 1 }), $("#box-one-content").fadeIn("slow") }, 100) } function DemoFormValidator() { $("#defaultForm").bootstrapValidator({ message: "This value is not valid", fields: { username: { message: "The username is not valid", validators: { notEmpty: { message: "The username is required and can't be empty" }, stringLength: { min: 6, max: 30, message: "The username must be more than 6 and less than 30 characters long" }, regexp: { regexp: /^[a-zA-Z0-9_\.]+$/, message: "The username can only consist of alphabetical, number, dot and underscore" } } }, country: { validators: { notEmpty: { message: "The country is required and can't be empty" } } }, acceptTerms: { validators: { notEmpty: { message: "You have to accept the terms and policies" } } }, email: { validators: { notEmpty: { message: "The email address is required and can't be empty" }, emailAddress: { message: "The input is not a valid email address" } } }, website: { validators: { uri: { message: "The input is not a valid URL" } } }, phoneNumber: { validators: { digits: { message: "The value can contain only digits" } } }, color: { validators: { hexColor: { message: "The input is not a valid hex color" } } }, zipCode: { validators: { usZipCode: { message: "The input is not a valid US zip code" } } }, password: { validators: { notEmpty: { message: "The password is required and can't be empty" }, identical: { field: "confirmPassword", message: "The password and its confirm are not the same" } } }, confirmPassword: { validators: { notEmpty: { message: "The confirm password is required and can't be empty" }, identical: { field: "password", message: "The password and its confirm are not the same" } } }, ages: { validators: { lessThan: { value: 100, inclusive: !0, message: "The ages has to be less than 100" }, greaterThan: { value: 10, inclusive: !1, message: "The ages has to be greater than or equals to 10" } } } } }) } function FormLayoutExampleInputLength(e) { var t = ["col-sm-1", "col-sm-2", "col-sm-3", "col-sm-4", "col-sm-5", "col-sm-6", "col-sm-7", "col-sm-8", "col-sm-9", "col-sm-10", "col-sm-11", "col-sm-12"]; e.slider({ range: "min", value: 1, min: 0, max: 11, step: 1, slide: function (e, a) { if (a.value < 1) return !1; var n = $("#form-styles"), i = n.parent(); i.removeClass(), i.addClass(t[a.value]), n.attr("placeholder", "." + t[a.value]) } }) } function RunClock() { var e = $(".second"), t = $(".minute"), a = $(".hour"), n = new Date, i = n.getSeconds(), o = n.getMinutes(), r = n.getHours(); r > 11 && (r -= 12), $("#knob-clock-value").html(r + ":" + o + ":" + i), e.val(i).trigger("change"), t.val(o).trigger("change"), a.val(r).trigger("change") } function CreateAllSliders() { $(".slider-default").slider(); var e = $(".slider-range-min-amount"), t = $(".slider-range-min"), a = $(".slider-range-max"), n = $(".slider-range-max-amount"), i = $(".slider-range"), o = $(".slider-range-amount"); t.slider({ range: "min", value: 37, min: 1, max: 700, slide: function (t, a) { e.val("$" + a.value) } }), e.val("$" + t.slider("value")), a.slider({ range: "max", min: 1, max: 100, value: 2, slide: function (e, t) { n.val(t.value) } }), n.val(a.slider("value")), i.slider({ range: !0, min: 0, max: 500, values: [75, 300], slide: function (e, t) { o.val("$" + t.values[0] + " - $" + t.values[1]) } }), o.val("$" + i.slider("values", 0) + " - $" + i.slider("values", 1)), $("#equalizer > div.progress > div").each(function () { var e = parseInt($(this).text(), 10); $(this).empty().slider({ value: e, range: "min", animate: !0, orientation: "vertical" }) }) } function AllTimePickers() { $("#datetime_example").datetimepicker({}), $("#time_example").timepicker({ hourGrid: 4, minuteGrid: 10, timeFormat: "hh:mm tt" }), $("#date3_example").datepicker({ numberOfMonths: 3, showButtonPanel: !0 }), $("#date3-1_example").datepicker({ numberOfMonths: 3, showButtonPanel: !0 }), $("#date_example").datepicker({}) } function DrawCalendar() {
    $("#external-events div.external-event").each(function () { var e = { title: $.trim($(this).text()) }; $(this).data("eventObject", e), $(this).draggable({ zIndex: 999, revert: !0, revertDuration: 0 }) }); var e = $("#calendar").fullCalendar({
        header: { left: "prev,next today", center: "title", right: "month,agendaWeek,agendaDay" }, selectable: !0, selectHelper: !0, select: function (t, a, n) {
            var i = $('<form id="event_form"><div class="form-group has-success has-feedback"><label">Event name</label><div><input type="text" id="newevent_name" class="form-control" placeholder="Name of event"></div><label>Description</label><div><textarea rows="3" id="newevent_desc" class="form-control" placeholder="Description"></textarea></div></div></form>'), o = $('<button id="event_cancel" type="cancel" class="btn btn-default btn-label-left"><span><i class="fa fa-clock-o txt-danger"></i></span>Cancel</button><button type="submit" id="event_submit" class="btn btn-primary btn-label-left pull-right"><span><i class="fa fa-clock-o"></i></span>Add</button>');
            OpenModalBox("Add event", i, o), $("#event_cancel").on("click", function () { CloseModalBox() }), $("#event_submit").on("click", function () { var i = $("#newevent_name").val(); "" != i && e.fullCalendar("renderEvent", { title: i, description: $("#newevent_desc").val(), start: t, end: a, allDay: n }, !0), CloseModalBox() }), e.fullCalendar("unselect")
        }, editable: !0, droppable: !0, drop: function (e, t) { var a = $(this).data("eventObject"), n = $.extend({}, a); n.start = e, n.allDay = t, $("#calendar").fullCalendar("renderEvent", n, !0), $("#drop-remove").is(":checked") && $(this).remove() }, eventRender: function (e, t) { "" != e.description && t.attr("title", e.description) }, eventClick: function (t) { var a = $('<form id="event_form"><div class="form-group has-success has-feedback"><label">Event name</label><div><input type="text" id="newevent_name" value="' + t.title + '" class="form-control" placeholder="Name of event"></div><label>Description</label><div><textarea rows="3" id="newevent_desc" class="form-control" placeholder="Description">' + t.description + "</textarea></div></div></form>"), n = $('<button id="event_cancel" type="cancel" class="btn btn-default btn-label-left"><span><i class="fa fa-clock-o txt-danger"></i></span>Cancel</button><button id="event_delete" type="cancel" class="btn btn-danger btn-label-left"><span><i class="fa fa-clock-o txt-danger"></i></span>Delete</button><button type="submit" id="event_change" class="btn btn-primary btn-label-left pull-right"><span><i class="fa fa-clock-o"></i></span>Save changes</button>'); OpenModalBox("Change event", a, n), $("#event_cancel").on("click", function () { CloseModalBox() }), $("#event_delete").on("click", function () { e.fullCalendar("removeEvents", function (e) { return e._id == t._id }), CloseModalBox() }), $("#event_change").on("click", function () { t.title = $("#newevent_name").val(), t.description = $("#newevent_desc").val(), e.fullCalendar("updateEvent", t), CloseModalBox() }) }
    }); $("#new-event-add").on("click", function (e) { e.preventDefault(); var t = $("#new-event-title").val(), a = $("#new-event-desc").val(); if ("" != t) { var n = $('<div class="external-event" data-description="' + a + '">' + t + "</div>"); $("#events-templates-header").after(n); var i = { title: t, description: a }; n.data("eventObject", i), n.draggable({ zIndex: 999, revert: !0, revertDuration: 0 }) } })
} function DrawFullCalendar() { LoadCalendarScript(DrawCalendar) } jQuery.fn.swap = function (e) { e = jQuery(e)[0]; var t = this[0], a = t.parentNode.insertBefore(document.createTextNode(""), t); return e.parentNode.insertBefore(t, e), a.parentNode.insertBefore(e, a), a.parentNode.removeChild(a), this }, function (e) { e.fn.beautyTables = function () { var t = this, a = !1; this.on("keydown", function (n) { var i = n.target, o = e(i).closest("tr"), r = e(i).closest("td"); if ("INPUT" == i.tagName.toUpperCase()) { if (n.shiftKey === !0) switch (n.keyCode) { case 37: r.prev().children("input[type=text]").focus(); break; case 39: r.next().children("input[type=text]").focus(); break; case 40: 0 == a && o.next().find("td:eq(" + r.index() + ") input[type=text]").focus(); break; case 38: 0 == a && o.prev().find("td:eq(" + r.index() + ") input[type=text]").focus() } if (n.ctrlKey === !0) switch (n.keyCode) { case 37: o.find("td:eq(1)").find("input[type=text]").focus(); break; case 39: o.find("td:last-child").find("input[type=text]").focus(); break; case 40: 0 == a && t.find("tr:last-child td:eq(" + r.index() + ") input[type=text]").focus(); break; case 38: 0 == a && t.find("tr:eq(1) td:eq(" + r.index() + ") input[type=text]").focus() } (13 == n.keyCode || 9 == n.keyCode) && (n.preventDefault(), r.next().find("input[type=text]").focus()), 0 == a && (34 == n.keyCode && (n.preventDefault(), t.find("tr:last-child td:last-child").find("input[type=text]").focus()), 33 == n.keyCode && (n.preventDefault(), t.find("tr:eq(1) td:eq(1)").find("input[type=text]").focus())) } }), t.find("input[type=text]").each(function () { e(this).on("blur", function (a) { var n = a.target, i = e(n).parents("td"); 1 == t.find("input[name=string-fill]").prop("checked") && i.nextAll().find("input[type=text]").each(function () { e(this).val(e(n).val()) }) }) }) } }(jQuery), function (e) { e.fn.beautyHover = function () { var t = this; t.on("mouseover", "td", function () { var t = e(this).index(), a = e(this).closest("table").find("tr"); a.each(function () { e(this).find("td:eq(" + t + ")").addClass("beauty-hover") }) }).on("mouseleave", "td", function () { var t = e(this).index(), a = e(this).closest("table").find("tr"); a.each(function () { e(this).find("td:eq(" + t + ")").removeClass("beauty-hover") }) }) } }(jQuery), $(document).ready(function () { $(".preloader").hide(), $(".show-sidebar").on("click", function (e) { e.preventDefault(), $("div#main").toggleClass("sidebar-show"), setTimeout(MessagesMenuWidth, 250) }); var e = location.hash.replace(/^#/, ""); e.length < 1 && (e = "/Home"), e = "/Home", $(".main-menu").on("click", "a", function (e) { var t = $(this).parents("li"), a = $(this).closest("li.dropdown"), n = $(".main-menu li").not(t); if (n.find("a").removeClass("active"), n.find("a").removeClass("active-parent"), $(this).hasClass("dropdown-toggle") || 0 == $(this).closest("li").find("ul").length) { $(this).addClass("active-parent"); var i = $(this).next(); i.is(":visible") ? (a.find("ul.dropdown-menu").slideUp("fast"), a.find("ul.dropdown-menu a").removeClass("active")) : (n.find("ul.dropdown-menu").slideUp("fast"), i.slideDown("fast")) } else if (a.find("a.dropdown-toggle").hasClass("active-parent")) { var o = $(this).closest("ul.dropdown-menu"); o.find("li.dropdown").not($(this).closest("li")).find("ul.dropdown-menu").slideUp("fast") } if (0 == $(this).hasClass("active") && ($(this).parents("ul.dropdown-menu").find("a").removeClass("active"), $(this).addClass("active")), $(this).hasClass("ajax-link")) { e.preventDefault(), $(this).hasClass("add-full") ? $("#content").addClass("full-content") : $("#content").removeClass("full-content"); var r = $(this).attr("href"); window.location = r } "#" == $(this).attr("href") && e.preventDefault() }); var t = window.innerHeight - 49; $("#main").css("min-height", t).on("click", ".expand-link", function (e) { var t = $("body"); e.preventDefault(); var a = $(this).closest("div.box"), n = $(this).find("i"); n.toggleClass("fa-expand").toggleClass("fa-compress"), a.toggleClass("expanded"), t.toggleClass("body-expanded"); var i = 0; t.hasClass("body-expanded") && (i = 100), setTimeout(function () { a.toggleClass("expanded-padding") }, i), setTimeout(function () { a.resize(), a.find("[id^=map-]").resize() }, i + 50) }).on("click", ".collapse-link", function (e) { e.preventDefault(); var t = $(this).closest("div.box"), a = $(this).find("i"), n = t.find("div.box-content"); n.slideToggle("fast"), a.toggleClass("fa-chevron-up").toggleClass("fa-chevron-down"), setTimeout(function () { t.resize(), t.find("[id^=map-]").resize() }, 50) }).on("click", ".close-link", function (e) { e.preventDefault(); var t = $(this).closest("div.box"); t.remove() }), $("#locked-screen").on("click", function (e) { e.preventDefault(), $("body").addClass("body-screensaver"), $("#screensaver").addClass("show"), ScreenSaver() }), $("body").on("click", "a.close-link", function (e) { e.preventDefault(), CloseModalBox() }), $("#top-panel").on("click", "a", function (e) { if ($(this).hasClass("ajax-link")) { e.preventDefault(), $(this).hasClass("add-full") ? $("#content").addClass("full-content") : $("#content").removeClass("full-content"); var t = $(this).attr("href"); window.location.hash = t, LoadAjaxContent(t) } }), $("#search").on("keydown", function (t) { 13 == t.keyCode && (t.preventDefault(), $("#content").removeClass("full-content"), e = "ajax/page_search.html", window.location.hash = e, LoadAjaxContent(e)) }), $("#screen_unlock").on("mouseover", function () { var e = "Enter current username and password", t = $('<div class="form-group"><label class="control-label">Username</label><input type="text" class="form-control" name="username" /></div><div class="form-group"><label class="control-label">Password</label><input type="password" class="form-control" name="password" /></div>'), a = $('<div class="text-center"><a href="index.html" class="btn btn-primary">Unlock</a></div>'); OpenModalBox(e, t, a) }) });