@model RecieveViewModel

@{
    ViewBag.Title = "Transfer Stock";
    var db = new KitSEntities();
}

@using (Html.BeginForm("RecieveOrder", "Order", FormMethod.Post, new { id = "uploadForm1", enctype = "multipart/form-data",
    onsubmit = "return confirm('Do you really want to submit the form?');"
}))
{
    <div class="row">
        <div id="breadcrumb" class="col-md-12">
            <ol class="breadcrumb">
                <li><a href="#">Order Management</a></li>
                <li><a href="~/Order">Orders</a></li>
                <li><a href="#">Transfer</a></li>
            </ol>
        </div>
    </div>


    <div class="row">
        <div class="col-xs-12 col-sm-12">
            <div class="box">
                <div class="box-content">
                    @if (TempData["ERROR"] != null)
                    {
                        <div class="alert alert-danger alert-dismissable">
                            <button type="button" class="close" data-dismiss="alert" aria-hidden="true">&times;</button>
                            <span>@TempData["ERROR"] </span>
                        </div>
                    }
                    <fieldset>

                        <div class="form-group">
                            <div class="col-sm-4">
                                <h4>Order: <span>@Model.OrderID</span></h4>
                                @Html.HiddenFor(m => m.OrderID)
                            </div>
                        </div>

                        <div class="form-group">

                            <div class="col-sm-2">
                                @Html.LabelFor(model => model.TransferTo, "Transfer To ", new { @class = "control-label" })
                                <span class="required-red">*</span>
                            </div>
                            <div class="col-sm-4">
                                @Html.DropDownListFor(model => model.TransferTo, (SelectList)ViewBag.Shops)
                                @Html.ValidationMessageFor(model => model.TransferTo)
                            </div>
                        </div>

                        @for (int i = 0; i < Model.OrderInfo.Count; i++)
                        {
                            @Html.HiddenFor(m => m.OrderInfo[i].ArticleID)
                            for (int j = 0; j < Model.OrderInfo[i].OrderHis.Count; j++)
                            {
                                @Html.HiddenFor(m => m.OrderInfo[i].OrderHis[j].ArticleDetID)
                                @Html.HiddenFor(m => m.OrderInfo[i].OrderHis[j].OrderDetail)      
                            }
                        }

                        @foreach (var item in Model.OrderInfo)
                        {    <div class="form-group">
                            <div class="col-sm-12">
                                <h5>
                                    @{
                            var art = db.WHArticles.Find(item.ArticleID);
                            <text>@art.ArticleName</text>
                                    }
                                </h5>

                                @foreach (var oD in item.OrderHis)
                                {
                                    <div class="row">
                                        <div class="col-sm-2">
                                            Color:
                                            <b> @oD.ColorName</b>
                                        </div>
                                        <div class="col-sm-2">
                                            Total Order:
                                            <b> @oD.TotalOrder</b>
                                        </div>
                                        <div class="col-sm-2">
                                            Total Transfer:
                                            <b> @oD.TotalRecieved</b>
                                        </div>
                                        <div class="col-sm-2">

                                            @(Html.Kendo().NumericTextBox<int>()
                                            .Name("recieved-" + oD.ArticleDetID)
                                            .Max(oD.TotalOrder - oD.TotalRecieved)
                                            .Min(0)           
                                            .Value(0)
                                            .Placeholder("Enter Rec. Quantity")
                                            )
                                        </div>
                                    </div>

                                }
                            </div>
                        </div>
                        }
                        <div class="clearfix"></div>
                        <div class="form-group">
                            <div class="col-sm-4">
                                <button type="submit" class="btn btn-primary btn-label-left">
                                    Save
                                </button>
                                <a href="~/Order" class="btn btn-primary btn-label-left">
                                    Cancel
                                </a>
                            </div>
                        </div>
                    </fieldset>
                </div>
            </div>
        </div>
    </div>
}